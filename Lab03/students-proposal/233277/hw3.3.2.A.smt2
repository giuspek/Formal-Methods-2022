(set-option :produce-models true)
(set-logic QF_LIA)
(declare-fun Diamond () Int)
(declare-fun Triangle () Int)
(declare-fun Circle () Int)
(declare-fun Pentagon () Int)
(declare-fun Rectangle () Int)
(declare-fun Diamond () Int)
(declare-fun Triangle () Int)
(declare-fun Rectangle () Int)
(assert (let ((.def_0 (* Triangle 2))) (let ((.def_1 (* 2 Diamond))) (let ((.def_2 (+ .def_1 .def_0))) (let ((.def_3 (* 3 Rectangle))) (let ((.def_4 (= .def_3 .def_2))) (let ((.def_5 (* Triangle 2))) (let ((.def_6 (= .def_5 100))) (let ((.def_7 (+ Circle Diamond))) (let ((.def_8 (= Pentagon .def_7))) (let ((.def_9 (* 2 Rectangle))) (let ((.def_10 (+ Pentagon .def_9))) (let ((.def_11 (+ Diamond .def_5 Circle))) (let ((.def_12 (= .def_11 .def_10))) (let ((.def_13 (and .def_12 .def_8 .def_6 .def_4))) .def_13)))))))))))))))
(check-sat)
(get-model)
(exit)
