(set-option :produce-models true)
(set-logic QF_LIA)
(declare-fun Diamond () Int)
(declare-fun Triangle () Int)
(declare-fun Circle () Int)
(declare-fun Pentagon () Int)
(declare-fun Rectangle () Int)
(declare-fun Triangle () Int)
(declare-fun Rectangle () Int)
(assert (let ((.def_0 (* Triangle 2))) (let ((.def_1 (+ .def_0 Triangle))) (let ((.def_2 (* 3 Rectangle))) (let ((.def_3 (= .def_2 .def_1))) (let ((.def_4 (* Triangle 2))) (let ((.def_5 (= .def_4 100))) (let ((.def_6 (+ Circle Diamond))) (let ((.def_7 (= Pentagon .def_6))) (let ((.def_8 (* 2 Rectangle))) (let ((.def_9 (+ Pentagon .def_8))) (let ((.def_10 (+ Diamond .def_4 Circle))) (let ((.def_11 (= .def_10 .def_9))) (let ((.def_12 (and .def_11 .def_7 .def_5 .def_3))) .def_12))))))))))))))
(check-sat)
(get-model)
(exit)